# coding=utf8
# –ê–≤—Ç–æ—Ä Wizard Capone (Artyom Samsonyan) v1.0.2
from random import randint as rnd
from datetime import datetime
import telebot, pymysql, re, time, requests
from telebot import types

class ConnectDB():
	def __init__(self, host, user, password, db):
		self.__host = host
		self.__user = user
		self.__password = password
		self.__db = db
	def connect(self):
		self.__connection = pymysql.connect(host=self.__host,
                             user=self.__user,
                             password=self.__password,                             
                             db=self.__db,
                             charset='utf8mb4',
                             cursorclass=pymysql.cursors.DictCursor)
		return self.__connection
class RequestDB():
	def __init__(self, conn, table, where, arg, arg2=False, limit=False, order=False):
		self.__conn = conn
		self.__table = table
		self.__where = where
		self.__arg = arg
		self.__arg2 = arg2
		self.__limit = limit
		self.__order = order
		self.__cur = self.__conn.cursor()
	def select(self):
		if self.__limit == False:
			if self.__order == False:
				sql_select = """SELECT * FROM %s WHERE `%s` = %s""" % (self.__table,self.__where,self.__arg)
				self.__cur.execute(sql_select)
			else:
				sql_select = """SELECT * FROM %s WHERE `%s` = %s ORDER BY `date_it` %s""" % (self.__table,self.__where,
					self.__arg,
					self.__order)
				self.__cur.execute(sql_select)
		else:
			if self.__order == False:
				sql_select = """SELECT * FROM %s WHERE `%s` = %s LIMIT %d""" % (self.__table,self.__where,self.__arg,self.__limit)
				self.__cur.execute(sql_select)
			else:
				sql_select = """SELECT * FROM %s WHERE `%s` = %s ORDER BY `date_it` %s LIMIT %d""" % (self.__table,self.__where,
					self.__arg,
					self.__limit,
					self.__order)
				self.__cur.execute(sql_select)
		return self.__cur
	def insert(self):
		sql_insert = """INSERT INTO %s (%s) VALUES (%s)""" % (self.__table,self.__where,self.__arg)
		self.__cur.execute(sql_insert)
		return self.__cur
	def update(self):
		sql_update = """UPDATE %s SET %s = %s WHERE %s = %s""" % (self.__table,self.__where,self.__arg,self.__arg2,self.__limit)
		self.__cur.execute(sql_update)
		return self.__cur
class users():
	def __init__(self, user_id):
		self.user_id = user_id
		self.position = 1
		self.clicked = 0
		self.withdraw = 0
		self.cost = 0
		self.current_page = 0
		self.delete_message = 0
		self.message_id = 0
		self.buy_contract = 0
		self.deposit_sum = 0
		self.open_deposit = 0
		self.sum_payment = ''
		self.contract_sum = 0
all_data = {}
types = telebot.types
bot = telebot.TeleBot('821583839:AAHtT-4dn5YfTlAxTLfSM9RsEigdzRErCvg', threaded=False)
def extract_unique_code(text):
    # Extracts the unique_code from the sent /start command.
    return text.split()[1] if len(text.split()) > 1 else None
@bot.message_handler(commands=['start'])
def send_welcome(message):
	global all_data
	unique_code = extract_unique_code(message.text)
	database = ConnectDB('45.13.252.1','u301024735_botter','botinbot2019','u301024735_botter')
	conn = database.connect()
	user_id = message.from_user.id
	request = RequestDB(conn, 'accounts','user_id',message.from_user.id,0,1)
	query = request.select()
	if query.rowcount == 0:
		balance = 0
		arr_insert = str(message.from_user.id) + str(",") + str(balance)
		request = RequestDB(conn, 'accounts','user_id,balance',arr_insert)
		query = request.insert()
		conn.commit()
		if unique_code != None:
			referal_insert = str(unique_code) + str(",") + str(message.from_user.id) + str(",") + str(0)
			request = RequestDB(conn, 'referals','user_id,referal_id,earnings',referal_insert)
			query = request.insert()
			conn.commit()
	if all_data.get(message.from_user.id) == None:
		data = users(message.from_user.id)
		all_data[message.from_user.id] = data
	message_text = "''–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å "+message.from_user.first_name+"''"
	bot.send_message(message.chat.id, message_text, reply_markup=keyboard(message.chat.id))
	conn.close()
@bot.message_handler(content_types=['text'])
def send_text(message):
	global all_data
	if all_data.get(message.from_user.id) != None:
		user = all_data[message.from_user.id]
		pattern = '^(üõí–ú–æ–π –∞–∫–∫–∞—É–Ω—Ç)'
		str_find = re.findall(pattern, message.text)
		if message.text == 'üîÑ –†–µ—Å—Ç–∞—Ä—Ç' and user.clicked == 0:
			user.clicked = 1
			bot.send_message(message.chat.id, '–†–µ—Å—Ç–∞—Ä—Ç–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ', reply_markup=keyboard(message.chat.id))
		elif message.text == 'üë§ –í–∞—à –∞–∫–∫–∞—É–Ω—Ç' or message.text == 'üë§ –ê–∫–∫–∞—É–Ω—Ç' and user.clicked == 0:
			user.clicked = 1
			bot.send_message(message.chat.id, '–ù–∞–ø—Ä–∞–≤–ª—è–µ–º—Å—è‚Ä§‚Ä§', reply_markup=account(message.chat.id))
		elif message.text == '‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏' and user.clicked == 0:
			user.clicked = 1
			user.position = 1
			bot.send_message(message.chat.id, '–ù–∞–ø—Ä–∞–≤–ª—è–µ–º—Å—è‚Ä§‚Ä§', reply_markup=settings(message.chat.id))
		elif message.text == '‚ùì –ü–æ—á–µ–º—É –º—ã?' and user.clicked == 0:
			user.clicked = 1
			decoded_string = "–•–æ—Ç–∏—Ç–µ –ø—Ä–∏–±—ã–ª–∏? –†–∞–∑–≤–∏—Ç–∏—è –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–∞ –±—É–¥—É—â–µ–µ? –ß—Ç–æ –∂–µ, –≤–∞–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ –∫ –Ω–∞–º. –ü–æ—Å–∫–æ–ª—å–∫—É —é–Ω–∞—è –≥—Ä—É–ø–ø–∞, –ø–æ–ª–Ω–∞—è —ç–Ω–µ—Ä–≥–∏–∏ –∏ –∏–¥–µ–π –Ω–∞—á–∞–ª–∞ —Ä–∞–∑–≤–∏—Ç–∏—è –Ω–æ–≤–æ–≥–æ –≤–∏–¥–∞, –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º —á—Ç–æ –µ—â—ë –Ω–µ –æ–∫–∞–∑–∞–ª–∏—Å—å –Ω–∞ –Ω—ã–Ω–µ—à–Ω–µ–º —Ä—ã–Ω–∫–µ. –ó–∞—á–µ–º –∑–∞–¥—É–º—ã–≤–∞—Ç—å—Å—è, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∏ —É–±–µ–¥–∏—Ç—å—Å—è –Ω–∞ –ª–∏—á–Ω–æ–º –æ–ø—ã—Ç–µ? –ù–µ —Ç–µ—Ä—è–π—Ç–µ —à–∞–Ω—Å–∞, –∂–∏–∑–Ω—å —ç—Ç–æ —Ä–∏—Ç–º, —Ç–∞–∫ –¥–≤–∏–≥–∞–π—Ç–µ—Å—å –≤–º–µ—Å—Ç–µ —Å –Ω–∞–º–∏ –≤–ø–µ—Ä—ë–¥.\n\n–í–∞—à –Ω—ã–Ω–µ—à–Ω–∏–π –¥–µ–Ω—å, –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ª–∏—à—å –≤—ã, —Å –ø–æ–º–æ—â—å—é –Ω–∞—Å!"
			bot.send_message(message.chat.id, decoded_string, reply_markup=previous(message.chat.id))
		elif message.text == 'üìä –†–∞–∑–≤–∏—Ç–∏–µ' and user.clicked == 0:
			user.clicked = 1
			bot.send_message(message.chat.id, '–î–æ–±—Ä–æ–µ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫!\n\n–î–æ—Ä–æ–≥–∏–µ –∫–ª–∏–µ–Ω—Ç—ã –Ω–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã ¬´EvocaBot¬ª\n\n–ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –Ω–∞ –Ω–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ. –ö–æ–º–∞–Ω–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –ø–µ—Ä–µ—Ä—ã–≤–æ–≤, –¥–ª—è —É–ª—É—á—à–µ–Ω–∏–µ –Ω–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –∏ –æ–±–µ—â–∞–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —Ä–∞–¥–æ–≤–∞—Ç—å –≤–∞—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏. –†–∞–∑–≤–∏–≤–∞—Ç—å –Ω–∞—à—É –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –≤ –ª—É—á—à—É—é —Å—Ç–æ—Ä–æ–Ω—É. –ù–∞–¥–µ–µ–º—Å—è –Ω–∞ –≤–∞—à—É –ø–æ–¥–¥–µ—Ä–∂–∫—É. –í –¥–∞–Ω–Ω–æ–º —Ä–∞–∑–¥–µ–ª–µ –±—É–¥—É—Ç –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å—Å—è –Ω–æ–≤–æ—Å—Ç–∏ –æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö.', reply_markup=previous(message.chat.id))
		elif message.text == '‚Ü© –ù–∞–∑–∞–¥' and user.position == 1 and user.clicked == 0:
			user.clicked = 1
			bot.send_message(message.chat.id, '–ù–∞–ø—Ä–∞–≤–ª—è–µ–º—Å—è‚Ä§‚Ä§', reply_markup=keyboard(message.chat.id))
			user.withdraw = 0
		elif message.text == '‚Ü© –ù–∞–∑–∞–¥' and user.position == 2 and user.clicked == 0:
			user.clicked = 1
			bot.send_message(message.chat.id, '–ù–∞–ø—Ä–∞–≤–ª—è–µ–º—Å—è‚Ä§‚Ä§', reply_markup=account(message.chat.id))
			user.withdraw = 0
			user.cost = 0
			user.position = 1
			user.open_deposit = 0
		elif message.text == '‚Ü© –ù–∞–∑–∞–¥' and user.position == 3 and user.clicked == 0:
			user.clicked = 1
			user.buy_contract = 0
			user.position = 2
			bot.send_message(message.chat.id, '–ù–∞–ø—Ä–∞–≤–ª—è–µ–º—Å—è‚Ä§‚Ä§', reply_markup=contracts(message.chat.id))
		elif message.text == '‚Ü© –ù–∞–∑–∞–¥' and user.position == 4 and user.clicked == 0:
			user.clicked = 1
			user.position = 1
			bot.send_message(message.chat.id, '–ù–∞–ø—Ä–∞–≤–ª—è–µ–º—Å—è‚Ä§‚Ä§', reply_markup=settings(message.chat.id))
		elif message.text == '‚Ü© –ù–∞–∑–∞–¥' and user.position == 5 and user.clicked == 0:
			user.clicked = 1
			user.position = 2
			bot.send_message(message.chat.id, '–ù–∞–ø—Ä–∞–≤–ª—è–µ–º—Å—è‚Ä§‚Ä§', reply_markup=referals(message.chat.id))
		elif user.withdraw == 1:
			if message.text.isdigit():
				user.cost = int(message.text)
				if user.cost > 0:
					database = ConnectDB('45.13.252.1','u301024735_botter','botinbot2019','u301024735_botter')
					conn = database.connect()
					request = RequestDB(conn, 'accounts','user_id',message.from_user.id,0,1)
					query = request.select()
					fetchl = query.fetchall()
					if fetchl[0]['balance'] >= user.cost:
						bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —É–∫–∞–∂–∏—Ç–µ –≤–∞—à Payeer —Å—á—ë—Ç –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤', reply_markup=previous(message.chat.id))
						user.withdraw = 2
					else:
						bot.send_message(message.chat.id, '–ù–∞ –≤–∞—à–µ–º —Å—á–µ—Ç—É –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –≤—ã–≤–æ–¥–∞ %d —Ä—É–±–ª–µ–π' % user.cost, reply_markup=previous(message.chat.id))
					conn.close()
		elif user.withdraw == 2:
			regex_string = '^P([0-9]{10})$'
			find_regex = re.findall(regex_string, message.text)
			if len(find_regex) > 0:
				if len(message.text) == 11:
					payeer = str(message.text)
					database = ConnectDB('45.13.252.1','u301024735_botter','botinbot2019','u301024735_botter')
					conn = database.connect()
					request = RequestDB(conn, 'accounts','user_id',message.from_user.id,0,1)
					query = request.select()
					if query.rowcount == 1:
						fetchl = query.fetchall()
						user_cash = fetchl[0]['balance']
						user_cash -= user.cost
						arr_insert = str(message.from_user.id) + str(",") + str(user.cost) + str(",") + str("'") + str(payeer) + str("'") + str(",") + str(0)
						request = RequestDB(conn, 'withdraw','user_id,cost,payeer,status',arr_insert)
						query = request.insert()
						conn.commit()
						user.withdraw = 0
						bot.send_message(message.chat.id, '–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã—Å—Ç–∞–≤–∏–ª–∏ —Å—á—ë—Ç –≤ —Ä–∞–∑–º–µ—Ä–µ %d —Ä—É–±–ª–µ–π –Ω–∞ —Å–≤–æ–π Payeer –∫–æ—à–µ–ª–µ–∫ %s !' % (user.cost, payeer), reply_markup=previous(message.chat.id))
						request = RequestDB(conn, 'accounts','balance',user_cash,'user_id',message.from_user.id)
						query = request.update()
						conn.commit()
					else:
						bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞!', reply_markup=previous(message.chat.id))
					conn.close()
				else:
					bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞! –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π Payeer –∫–æ—à–µ–ª–µ–∫', reply_markup=previous(message.chat.id))
			else:
				bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞! –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π Payeer –∫–æ—à–µ–ª–µ–∫', reply_markup=previous(message.chat.id))
		elif message.text == 'üì∞ –ö–æ–Ω—Ç—Ä–∞–∫—Ç—ã | –°—Ç–∞—Ç—É—Å: –ù–µ –∞–∫—Ç–∏–≤–µ–Ω' or message.text == 'üì∞ –ö–æ–Ω—Ç—Ä–∞–∫—Ç—ã | –°—Ç–∞—Ç—É—Å: –ê–∫—Ç–∏–≤–µ–Ω ‚úÖ' and user.clicked == 0:
			user.clicked += 1
			database = ConnectDB('45.13.252.1','u301024735_botter','botinbot2019','u301024735_botter')
			conn = database.connect()
			request = RequestDB(conn, 'accounts','user_id',message.from_user.id,0,1)
			query = request.select()
			fetchl = query.fetchall()
			request2 = RequestDB(conn, 'contracts','user_id',message.from_user.id)
			query2 = request2.select()
			if query2.rowcount != 0:
				fetchl2 = query2.fetchall()
				all_income_day = 0
				count = 0
				for row in fetchl2:
					if row['status'] == 1:
						count += 1
						if row['type'] == 1:
							all_income_day += round((row['cost'] / 100 * 30) / 7)
						elif row['type'] == 2:
							all_income_day += round((row['cost'] / 100 * 35) / 7)
						elif row['type'] == 3:
							all_income_day += round((row['cost'] / 100 * 40) / 7)
				if count != 0:
					bot.send_message(message.chat.id, '–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–æ–º\n\n–ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤: %d\n–û–±—â–∏–π —Å—É—Ç–æ—á–Ω—ã–π –¥–æ—Ö–æ–¥: %d ‚ÇΩ\n\n–ü–æ–¥—Ä–æ–±–Ω–µ–µ –≤ —Ä–∞–∑–¥–µ–ª–µ:\n‚ûï –ú–æ–∏ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã' % (count, all_income_day), reply_markup=contracts(message.chat.id))
				else:
					bot.send_message(message.chat.id, '–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–æ–º\n\n‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤!\n\n–ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤: 0\n–û–±—â–∏–π —Å—É—Ç–æ—á–Ω—ã–π –¥–æ—Ö–æ–¥: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\n\n–ü–æ–¥—Ä–æ–±–Ω–µ–µ –≤ —Ä–∞–∑–¥–µ–ª–µ:\nüîê –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã', reply_markup=contracts(message.chat.id))
			else:
				bot.send_message(message.chat.id, '–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–æ–º\n\n‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤!\n\n–ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤: 0\n–û–±—â–∏–π —Å—É—Ç–æ—á–Ω—ã–π –¥–æ—Ö–æ–¥: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\n\n–ü–æ–¥—Ä–æ–±–Ω–µ–µ –≤ —Ä–∞–∑–¥–µ–ª–µ:\nüîê –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã', reply_markup=contracts(message.chat.id))
			user.position = 2
			conn.close()
		elif message.text == '‚¨á –í—ã–≤–æ–¥' and user.clicked == 0:
			user.position = 2
			user.withdraw = 1
			database = ConnectDB('45.13.252.1','u301024735_botter','botinbot2019','u301024735_botter')
			conn = database.connect()
			request = RequestDB(conn, 'accounts','user_id',message.from_user.id,0,1)
			query = request.select()
			fetchl = query.fetchall()
			bot.send_message(message.chat.id, '–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: %d —Ä—É–±–ª–µ–π\n\n–í–≤–µ–¥–∏—Ç–µ —Ç—É —Å—É–º–º—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ –∏–∑ –±–∞–ª–∞–Ω—Å–∞:' % fetchl[0]['balance'], reply_markup=previous(message.chat.id))
			conn.close()
		elif len(str_find) > 0:
			user.position = 2
			bot.send_message(message.chat.id, '–ù–∞–ø—Ä–∞–≤–ª—è–µ–º—Å—è‚Ä§‚Ä§', reply_markup=account_management(message.chat.id))
		elif message.text == '‚úÖ –ò—Å—Ç–æ—Ä–∏—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π' and user.clicked == 0:
			user.clicked += 1
			database = ConnectDB('45.13.252.1','u301024735_botter','botinbot2019','u301024735_botter')
			conn = database.connect()
			request = RequestDB(conn, 'deposit','user_id',message.from_user.id)
			query = request.select()
			if query.rowcount == 0:
				bot.send_message(message.chat.id, '–ò—Å—Ç–æ—Ä–∏—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π\n\n‚ùå –£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç –∏—Å—Ç–æ—Ä–∏—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π', reply_markup=previous(message.chat.id))
			else:
				fetchl = query.fetchall()
				bot.send_message(message.chat.id, '–ò—Å—Ç–æ—Ä–∏—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π\n\n')
				for row in fetchl:
					if row['status'] == 0:
						deposit_status = '‚ùå –ù–µ –æ–ø–ª–∞—á–µ–Ω–∞'
					else:
						deposit_status = '‚úÖ –û–ø–ª–∞—á–µ–Ω–æ'
					bot.send_message(message.chat.id, 'ID –æ–ø–µ—Ä–∞—Ü–∏–∏: %d\n–ü–ª–∞—Ç–µ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: %s\n–°—É–º–º–∞: %d\n–î–∞—Ç–∞: %s\n\n–°—Ç–∞—Ç—É—Å: %s' % (row['id'],row['payment_system'],row['cost'],row['date_it'],deposit_status), reply_markup=previous(message.chat.id))
			conn.close()
		elif message.text == 'üí∞ –ò—Å—Ç–æ—Ä–∏—è –≤—ã–≤–æ–¥–∞' and user.clicked == 0:
			user.clicked += 1
			database = ConnectDB('45.13.252.1','u301024735_botter','botinbot2019','u301024735_botter')
			conn = database.connect()
			request = RequestDB(conn, 'withdraw','user_id',message.from_user.id)
			query = request.select()
			if query.rowcount == 0:
				bot.send_message(message.chat.id, '–ò—Å—Ç–æ—Ä–∏—è –≤—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤\n\n‚ùå –£ –≤–∞—Å –µ—â–µ –Ω–µ –±—ã–ª–æ –∑–∞—è–≤–æ–∫ –Ω–∞ –≤—ã–≤–æ–¥', reply_markup=previous(message.chat.id))
			else:
				fetchl = query.fetchall()
				bot.send_message(message.chat.id, '–ò—Å—Ç–æ—Ä–∏—è –≤—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤\n\n')
				for row in fetchl:
					if row['status'] == 0:
						withdraw_status = 'üîÑ –í –æ–∂–∏–¥–∞–Ω–∏–∏'
					elif row['status'] == 1:
						withdraw_status = '‚úÖ –û–ø–ª–∞—á–µ–Ω–æ'
					elif row['status'] == 2:
						withdraw_status = '‚õî –û—Ç–º–µ–Ω–µ–Ω–æ'
					bot.send_message(message.chat.id, 'ID –æ–ø–µ—Ä–∞—Ü–∏–∏: %d\nPayeer –∫–æ—à–µ–ª–µ–∫: %s\n–°—É–º–º–∞: %d\n–î–∞—Ç–∞: %s\n\n–°—Ç–∞—Ç—É—Å: %s' % (row['id'],row['payeer'],row['cost'],row['date_it'],withdraw_status), reply_markup=previous(message.chat.id))
			conn.close()
		elif message.text == 'üîê –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã' and user.clicked == 0:
			user.clicked += 1
			user.position = 3
			inline_btn = types.InlineKeyboardMarkup()
			url_button = types.InlineKeyboardButton(text="‚¨Ö", callback_data="previous_contract")
			url_button2 = types.InlineKeyboardButton(text="‚ûï", callback_data="buy_contract")
			url_button3 = types.InlineKeyboardButton(text="‚û°", callback_data="next_contract")
			inline_btn.row(url_button,url_button2,url_button3)
			user.delete_message = message.chat.id
			user.message_id = message.message_id
			bot.send_message(message.chat.id, "üìù | –ö–æ–Ω—Ç—Ä–∞–∫—Ç ¬´–ù–∞—á–∞–ª—å–Ω—ã–π¬ª - –ø–ª—é—Å 30% –∫ –¥–µ–ø–æ–∑–∏—Ç—É.\nüïî | –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ - 7 –¥–Ω–µ–π.\nüí∞ | –°—É–º–º–∞ –≤–∑–Ω–æ—Å–∞ –æ—Ç 100 —Ä—É–±–ª–µ–π –¥–æ 14999 —Ä—É–±–ª–µ–π.", reply_markup=inline_btn)
			user.clicked = 0
		elif message.text == '‚ûï –ú–æ–∏ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã' and user.clicked == 0:
			user.clicked += 1
			database = ConnectDB('45.13.252.1','u301024735_botter','botinbot2019','u301024735_botter')
			conn = database.connect()
			request = RequestDB(conn, 'contracts','user_id',message.from_user.id)
			query = request.select()
			if query.rowcount != 0:
				fetchl = query.fetchall()
				for row in fetchl:
					if row['type'] == 1:
						contract_type = '–ù–∞—á–∞–ª—å–Ω—ã–π'
						income_day = round((row['cost'] / 100 * 30) / 7)
					elif row['type'] == 2:
						contract_type = '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π'
						income_day = round((row['cost'] / 100 * 35) / 7)
					elif row['type'] == 3:
						contract_type = '–ë–∏–∑–Ω–µ—Å'
						income_day = round((row['cost'] / 100 * 40) / 7)
					if row['status'] == 1:
						ts = time.time()
						date_format = '%Y-%m-%d %H:%M:%S'
						d1 = datetime.fromtimestamp(ts)
						d2 = datetime.strptime(str(row['date_start']), date_format)
						diff = d1 - d2
						contract_status = '–í –ø—Ä–æ—Ü–µ—Å—Å–µ üîÑ'
						status_working = 'üìà –†–∞–±–æ—Ç–∞–µ—Ç %d –¥–Ω–µ–π' % diff.days
					else:
						contract_status = '–ó–∞–∫—Ä—ã—Ç ‚úÖ'
						status_working = 'üìà –†–∞–±–æ—Ç–∞–ª–æ 7 –¥–Ω–µ–π'
					bot.send_message(message.chat.id, '‚Ñπ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ:\n\n¬Æ –¢–∞—Ä–∏—Ñ : %s\nüìÖ –°—Ä–æ–∫: 7 –¥–Ω–µ–π\n%s\n\nüí≤ –î–æ—Ö–æ–¥/–¥–µ–Ω—å : %d ‚ÇΩ\nüíµ –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ : %d ‚ÇΩ\n\nüñä –ü–æ–¥–ø–∏—Å–∞–Ω : %s\nüîí –ó–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è : %s\n\n–°—Ç–∞—Ç—É—Å : %s' % (contract_type,status_working,income_day,row['working'],row['date_start'],row['date_end'],contract_status), reply_markup=previous(message.chat.id))
			else:
				bot.send_message(message.chat.id, '–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–æ–º\n\n‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤!\n\n–ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤: 0\n–û–±—â–∏–π —Å—É—Ç–æ—á–Ω—ã–π –¥–æ—Ö–æ–¥: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\n\n–ü–æ–¥—Ä–æ–±–Ω–µ–µ –≤ —Ä–∞–∑–¥–µ–ª–µ:\nüîê –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã', reply_markup=contracts(message.chat.id))
			user.position = 3
			conn.close()
		elif message.text == 'üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –°–∏—Å—Ç–µ–º–∞' and user.clicked == 0:
			user.clicked += 1
			user.position = 2
			bot.send_message(message.chat.id, '–ù–∞–ø—Ä–∞–≤–ª—è–µ–º—Å—è‚Ä§‚Ä§', reply_markup=referals(message.chat.id))
		elif message.text == '‚ûï –ú–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞' and user.clicked == 0:
			user.clicked += 1
			user.position = 5
			bot.send_message(message.chat.id, '–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: https://t.me/Evoca_Bot?start=%d' % message.chat.id, reply_markup=previous(message.chat.id))
		elif message.text == 'ü§ù –ú–æ–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã' and user.clicked == 0:
			user.clicked += 1
			user.position = 5
			database = ConnectDB('45.13.252.1','u301024735_botter','botinbot2019','u301024735_botter')
			conn = database.connect()
			request = RequestDB(conn, 'referals','user_id',message.from_user.id)
			query = request.select()
			if query.rowcount != 0:
				fetchl = query.fetchall()
				earnings = 0
				counter = 0
				for row in fetchl:
					counter += 1
					earnings += row['earnings']
				bot.send_message(message.chat.id, '–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –°–∏—Å—Ç–µ–º–∞\n\n–ê–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: %d\n–û–±—â–∏–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥: %d ‚ÇΩ' % (counter,earnings), reply_markup=previous(message.chat.id))
			else:
				bot.send_message(message.chat.id, '–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –°–∏—Å—Ç–µ–º–∞\n\n‚ùå –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤\n\n–ü–æ–¥—Ä–æ–±–Ω–µ–µ –≤ —Ä–∞–∑–¥–µ–ª–µ:\n‚ûï –ú–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞', reply_markup=previous(message.chat.id))
		elif message.text == '‚¨Ü –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ' and user.clicked == 0:
			user.clicked += 1
			user.position = 2
			user.open_deposit = 1
			bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –æ—Ç 100 —Ä—É–±–ª–µ–π –∏ –±–æ–ª—å—à–µ –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å —Å–≤–æ–π –±–∞–ª–∞–Ω—Å:\n', reply_markup=previous(message.chat.id))
		elif user.buy_contract == 1:
			if message.text.isdigit():
				deposit_sum = int(message.text)
				if deposit_sum >= 100 and deposit_sum <= 14999:
					database = ConnectDB('45.13.252.1','u301024735_botter','botinbot2019','u301024735_botter')
					conn = database.connect()
					request = RequestDB(conn, 'accounts','user_id',message.from_user.id,0,1)
					query = request.select()
					fetchl = query.fetchall()
					if fetchl[0]['balance'] >= deposit_sum:
						inline_btn = types.InlineKeyboardMarkup()
						url_button = types.InlineKeyboardButton(text="–î–∞", callback_data="yes_ibuy")
						url_button2 = types.InlineKeyboardButton(text="–ù–µ—Ç", callback_data="no_ibuy")
						inline_btn.row(url_button,url_button2)
						user.buy_contract = 0
						user.contract_sum = deposit_sum
						user.delete_message = message.chat.id
						user.message_id = message.message_id
						bot.send_message(message.chat.id, '–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞\n\n–í—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–ª—é—á–∏—Ç—å –¥–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç –Ω–∞ —Å—É–º–º—É %d —Ä—É–±–ª–µ–π?' % deposit_sum, reply_markup=inline_btn)
					else:
						bot.send_message(message.chat.id, '‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –∑–∞–∫–ª—é—á–µ–Ω–∏–µ –¥–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞', reply_markup=previous(message.chat.id))
				else:
					bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –Ω–µ –º–µ–Ω—å—à–µ 100 –∏ –Ω–µ –±–æ–ª—å—à–µ 14999 —Ä—É–±–ª–µ–π', reply_markup=previous(message.chat.id))
			else:
				bot.send_message(message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!', reply_markup=previous(message.chat.id))
		elif user.buy_contract == 3:
			if message.text.isdigit():
				deposit_sum = int(message.text)
				if deposit_sum >= 15000 and deposit_sum <= 99999:
					database = ConnectDB('45.13.252.1','u301024735_botter','botinbot2019','u301024735_botter')
					conn = database.connect()
					request = RequestDB(conn, 'accounts','user_id',message.from_user.id,0,1)
					query = request.select()
					fetchl = query.fetchall()
					if fetchl[0]['balance'] >= deposit_sum:
						inline_btn = types.InlineKeyboardMarkup()
						url_button = types.InlineKeyboardButton(text="–î–∞", callback_data="yes_ibuy")
						url_button2 = types.InlineKeyboardButton(text="–ù–µ—Ç", callback_data="no_ibuy")
						inline_btn.row(url_button,url_button2)
						user.buy_contract = 0
						user.contract_sum = deposit_sum
						user.delete_message = message.chat.id
						user.message_id = message.message_id
						bot.send_message(message.chat.id, '–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞\n\n–í—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–ª—é—á–∏—Ç—å –¥–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç –Ω–∞ —Å—É–º–º—É %d —Ä—É–±–ª–µ–π?' % deposit_sum, reply_markup=inline_btn)
					else:
						bot.send_message(message.chat.id, '‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –∑–∞–∫–ª—é—á–µ–Ω–∏–µ –¥–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞', reply_markup=previous(message.chat.id))
				else:
					bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –Ω–µ –º–µ–Ω—å—à–µ 15000 –∏ –Ω–µ –±–æ–ª—å—à–µ 99999 —Ä—É–±–ª–µ–π', reply_markup=previous(message.chat.id))
			else:
				bot.send_message(message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!', reply_markup=previous(message.chat.id))
		elif user.buy_contract == 5:
			if message.text.isdigit():
				deposit_sum = int(message.text)
				if deposit_sum >= 100000:
					database = ConnectDB('45.13.252.1','u301024735_botter','botinbot2019','u301024735_botter')
					conn = database.connect()
					request = RequestDB(conn, 'accounts','user_id',message.from_user.id,0,1)
					query = request.select()
					fetchl = query.fetchall()
					if fetchl[0]['balance'] >= deposit_sum:
						inline_btn = types.InlineKeyboardMarkup()
						url_button = types.InlineKeyboardButton(text="–î–∞", callback_data="yes_ibuy")
						url_button2 = types.InlineKeyboardButton(text="–ù–µ—Ç", callback_data="no_ibuy")
						inline_btn.row(url_button,url_button2)
						user.buy_contract = 0
						user.contract_sum = deposit_sum
						user.delete_message = message.chat.id
						user.message_id = message.message_id
						bot.send_message(message.chat.id, '–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞\n\n–í—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–ª—é—á–∏—Ç—å –¥–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç –Ω–∞ —Å—É–º–º—É %d —Ä—É–±–ª–µ–π?' % deposit_sum, reply_markup=inline_btn)
					else:
						bot.send_message(message.chat.id, '‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –∑–∞–∫–ª—é—á–µ–Ω–∏–µ –¥–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞', reply_markup=previous(message.chat.id))
				else:
					bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –Ω–µ –º–µ–Ω—å—à–µ 100000 —Ä—É–±–ª–µ–π', reply_markup=previous(message.chat.id))
			else:
				bot.send_message(message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!', reply_markup=previous(message.chat.id))
		elif user.open_deposit == 1:
			if message.text.isdigit():
				deposit_sum = int(message.text)
				if deposit_sum >= 100:
					inline_btn = types.InlineKeyboardMarkup()
					url_button = types.InlineKeyboardButton(text="–î–∞", url="https://evocabot.ru?user_id=%d&amount=%d&username=%s" % (message.chat.id,deposit_sum,message.from_user.username))
					url_button2 = types.InlineKeyboardButton(text="–ù–µ—Ç", callback_data="no_ibuy2")
					inline_btn.add(url_button)
					inline_btn.add(url_button2)
					user.open_deposit = 0
					user.deposit_sum = deposit_sum
					bot.send_message(message.chat.id, '–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞\n\n–í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á–µ—Ç –Ω–∞ %d RUB?' % deposit_sum, reply_markup=inline_btn)
				else:
					bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –Ω–µ –º–µ–Ω—å—à–µ 100 —Ä—É–±–ª–µ–π', reply_markup=previous(message.chat.id))
			else:
				bot.send_message(message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!', reply_markup=previous(message.chat.id))
		elif message.text == '‚úÖ –û–ø–ª–∞—Ç–∏–ª' and len(user.sum_payment) != 0 and user.clicked == 0:
			user.clicked += 1
			database = ConnectDB('45.13.252.1','u301024735_botter','botinbot2019','u301024735_botter')
			conn = database.connect()
			request = RequestDB(conn, 'deposit','comments',str("'") + user.sum_payment + str("'"),0,1)
			query = request.select()
			fetchl = query.fetchall()
			if fetchl[0]['status'] == 1:
				user.sum_payment = ''
				bot.send_message(message.chat.id, '‚úÖ –û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞! –≤–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–∏–ª—Å—è –Ω–∞ —Å—É–º–º—É: %d —Ä—É–±–ª–µ–π' % fetchl[0]['cost'], reply_markup=previous(message.chat.id))
			else:
				bot.send_message(message.chat.id, 'üîÑ ¬´–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –µ—Å–ª–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –±—ã–ª–∏ –æ–ø–ª–∞—á–µ–Ω—ã —Å—É–º–º–∞ –±—É–¥–µ—Ç –Ω–∞—á–∏—Å–ª–µ–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 5 –º–∏–Ω—É—Ç¬ª', reply_markup=oplatil(message.chat.id))
		elif message.text == 'üö∏ –ü–æ–º–æ—â—å':
			user.clicked += 1
			user.position = 4
			bot.send_message(message.chat.id, '1) üîÑ –†–µ—Å—Ç–∞—Ä—Ç - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç ¬´–ë–æ—Ç–∞¬ª\n2) üë§ –í–∞—à –∞–∫–∫–∞—É–Ω—Ç - –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞\n3) ‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏ - –ù–∞—Å—Ç—Ä–æ–π–∏ –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞\n4) ‚ùì –ü–æ—á–µ–º—É –º—ã? - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ\n5) üìä –†–∞–∑–≤–∏—Ç–∏–µ - –û —Ä–∞–∑–≤–∏—Ç–∏—è—Ö –Ω–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞', reply_markup=previous(message.chat.id))
		elif message.text == 'üìù –û—Ñ–µ—Ä—Ç–∞':
			user.clicked += 1
			user.position = 4
			bot.send_message(message.chat.id, 'üîÑ –í –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..', reply_markup=previous(message.chat.id))
		elif message.text == 'üîê –ü—Ä–æ–º–æ':
			user.clicked += 1
			user.position = 4
			bot.send_message(message.chat.id, 'üîÑ –í –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..', reply_markup=previous(message.chat.id))
		elif message.text == 'üì¢ –û–±—â–∏–π —á–∞—Ç':
			user.position = 1
			inline_btn = types.InlineKeyboardMarkup()
			url_button = types.InlineKeyboardButton(text="–û—Ç–∫—Ä—ã—Ç—å —á–∞—Ç", url="https://t.me/EvocaBot")
			inline_btn.add(url_button)
			bot.send_message(message.chat.id, '–£ –Ω–∞—Å –µ—Å—Ç—å –æ–±—â–∏–π —á–∞—Ç –¥–ª—è –æ–±—â–µ–Ω–∏–µ –∏ –æ–±—Å—É–∂–¥–µ–Ω–∏–µ ¬´–ë–æ—Ç–∞¬ª —Å –¥—Ä—É–≥–∏–º–∏ –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞–º–∏ –∏ –ø—Ä—è–º–∞—è —Å–≤—è–∑—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π.\n–ß—Ç–æ –±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ —á–∞—Ç –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É —Å –Ω–∏–∂–µ‚§µ', reply_markup=inline_btn)
	else:
		bot.send_message(message.chat.id, '–ß—Ç–æ-–±—ã –Ω–∞—á–∞—Ç—å —á–∞—Ç –≤–≤–µ–¥–∏—Ç–µ: /start')
def keyboard(chatid):
	global all_data
	user = all_data[chatid]
	user.clicked = 0
	markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
	btn1 = types.KeyboardButton('üîÑ –†–µ—Å—Ç–∞—Ä—Ç')
	btn2 = types.KeyboardButton('üë§ –í–∞—à –∞–∫–∫–∞—É–Ω—Ç')
	btn3 = types.KeyboardButton('‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏')
	btn4 = types.KeyboardButton('‚ùì –ü–æ—á–µ–º—É –º—ã?')
	btn5 = types.KeyboardButton('üìä –†–∞–∑–≤–∏—Ç–∏–µ')
	markup.add(btn1,btn2,btn3,btn4,btn5)
	return markup
def account(chatid):
	global all_data
	user = all_data[chatid]
	user.clicked = 0
	markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
	database = ConnectDB('45.13.252.1','u301024735_botter','botinbot2019','u301024735_botter')
	conn = database.connect()
	request = RequestDB(conn, 'contracts','user_id',chatid)
	query = request.select()
	fetchl = query.fetchall()
	count = 0
	for row in fetchl:
		if row['status'] == 1:
			count += 1
	if count == 0:
		btn5 = types.KeyboardButton('üì∞ –ö–æ–Ω—Ç—Ä–∞–∫—Ç—ã | –°—Ç–∞—Ç—É—Å: –ù–µ –∞–∫—Ç–∏–≤–µ–Ω')
	else:
		btn5 = types.KeyboardButton('üì∞ –ö–æ–Ω—Ç—Ä–∞–∫—Ç—ã | –°—Ç–∞—Ç—É—Å: –ê–∫—Ç–∏–≤–µ–Ω ‚úÖ')
	request = RequestDB(conn, 'accounts','user_id',chatid,0,1)
	query = request.select()
	fetchl = query.fetchall()
	btn1 = types.KeyboardButton('üõí–ú–æ–π –∞–∫–∫–∞—É–Ω—Ç | –ë–∞–ª–∞–Ω—Å: %d ‚ÇΩ' % fetchl[0]['balance'])
	btn2 = types.KeyboardButton('‚¨Ü –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ')
	btn3 = types.KeyboardButton('‚¨á –í—ã–≤–æ–¥')
	btn6 = types.KeyboardButton('üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –°–∏—Å—Ç–µ–º–∞')
	btn4 = types.KeyboardButton('‚Ü© –ù–∞–∑–∞–¥')
	markup.add(btn5)
	markup.add(btn1)
	markup.row(btn2,btn3)
	markup.add(btn6)
	markup.add(btn4)
	return markup
def settings(chatid):
	global all_data
	user = all_data[chatid]
	user.clicked = 0
	markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
	btn1 = types.KeyboardButton('üö∏ –ü–æ–º–æ—â—å')
	btn2 = types.KeyboardButton('üìù –û—Ñ–µ—Ä—Ç–∞')
	btn3 = types.KeyboardButton('üîê –ü—Ä–æ–º–æ')
	btn4 = types.KeyboardButton('üì¢ –û–±—â–∏–π —á–∞—Ç')
	btn5 = types.KeyboardButton('‚Ü© –ù–∞–∑–∞–¥')
	markup.row(btn1,btn2)
	markup.add(btn3)
	markup.add(btn4)
	markup.add(btn5)
	return markup
def contracts(chatid):
	global all_data
	user = all_data[chatid]
	user.clicked = 0
	markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
	btn1 = types.KeyboardButton('üîê –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã')
	btn2 = types.KeyboardButton('‚ûï –ú–æ–∏ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã')
	btn3 = types.KeyboardButton('üë§ –ê–∫–∫–∞—É–Ω—Ç')
	btn4 = types.KeyboardButton('‚Ü© –ù–∞–∑–∞–¥')
	markup.row(btn1,btn2)
	markup.add(btn3)
	markup.add(btn4)
	return markup
def previous(chatid):
	global all_data
	user = all_data[chatid]
	user.clicked = 0
	markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
	btn1 = types.KeyboardButton('‚Ü© –ù–∞–∑–∞–¥')
	markup.add(btn1)
	return markup
def account_management(chatid):
	global all_data
	user = all_data[chatid]
	user.clicked = 0
	markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
	btn1 = types.KeyboardButton('‚úÖ –ò—Å—Ç–æ—Ä–∏—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π')
	btn2 = types.KeyboardButton('üí∞ –ò—Å—Ç–æ—Ä–∏—è –≤—ã–≤–æ–¥–∞')
	btn4 = types.KeyboardButton('‚Ü© –ù–∞–∑–∞–¥')
	markup.row(btn1,btn2)
	markup.add(btn4)
	return markup
def oplatil(chatid):
	global all_data
	user = all_data[chatid]
	user.clicked = 0
	markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
	btn1 = types.KeyboardButton('‚úÖ –û–ø–ª–∞—Ç–∏–ª')
	btn2 = types.KeyboardButton('‚Ü© –ù–∞–∑–∞–¥')
	markup.add(btn1)
	markup.add(btn2)
	return markup
def random_string(num):
	mystr = '#'
	for i in range(num):
		mystr += str(rnd(0,9))
		mystr += str(chr(rnd(97,122)))
	return mystr
def referals(chatid):
	global all_data
	user = all_data[chatid]
	user.clicked = 0
	markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
	btn1 = types.KeyboardButton('‚ûï –ú–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞')
	btn2 = types.KeyboardButton('ü§ù –ú–æ–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã')
	btn3 = types.KeyboardButton('‚Ü© –ù–∞–∑–∞–¥')
	markup.row(btn1,btn2)
	markup.add(btn3)
	return markup
@bot.callback_query_handler(lambda query: query.data == "next_contract")
def process_callback_1(query):
	global all_data
	chat_id=query.message.chat.id
	if all_data.get(chat_id) != None:
		user = all_data[chat_id]
		user.clicked = 0
		if user.current_page == 0:
			user.current_page += 1
			bot.delete_message(user.delete_message, user.message_id + 1)
			user.delete_message = chat_id
			user.buy_contract = 2
			user.message_id = query.message.message_id
			inline_btn = types.InlineKeyboardMarkup()
			url_button = types.InlineKeyboardButton(text="‚¨Ö", callback_data="previous_contract")
			url_button2 = types.InlineKeyboardButton(text="‚ûï", callback_data="buy_contract")
			url_button3 = types.InlineKeyboardButton(text="‚û°", callback_data="next_contract")
			inline_btn.row(url_button,url_button2,url_button3)
			bot.send_message(chat_id, "üìù | –ö–æ–Ω—Ç—Ä–∞–∫—Ç ¬´–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π¬ª - –ø–ª—é—Å 35% –∫ –¥–µ–ø–æ–∑–∏—Ç—É.\nüïî | –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ - 7 –¥–Ω–µ–π.\nüí∞ | –°—É–º–º–∞ –≤–∑–Ω–æ—Å–∞ –æ—Ç 15000 —Ä—É–±–ª–µ–π –¥–æ 99999 —Ä—É–±–ª–µ–π.", reply_markup=inline_btn)
		elif user.current_page == 1:
			user.current_page += 1
			bot.delete_message(user.delete_message, user.message_id + 1)
			user.delete_message = chat_id
			user.buy_contract = 4
			user.message_id = query.message.message_id
			inline_btn = types.InlineKeyboardMarkup()
			url_button = types.InlineKeyboardButton(text="‚¨Ö", callback_data="previous_contract")
			url_button2 = types.InlineKeyboardButton(text="‚ûï", callback_data="buy_contract")
			url_button3 = types.InlineKeyboardButton(text="‚û°", callback_data="next_contract")
			inline_btn.row(url_button,url_button2,url_button3)
			bot.send_message(chat_id, "üìù | –ö–æ–Ω—Ç—Ä–∞–∫—Ç ¬´–ë–∏–∑–Ω–µ—Å¬ª - –ø–ª—é—Å 40% –∫ –¥–µ–ø–æ–∑–∏—Ç—É.\nüïî | –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ - 7 –¥–Ω–µ–π.\nüí∞ | –°—É–º–º–∞ –≤–∑–Ω–æ—Å–∞ –æ—Ç 100000 —Ä—É–±–ª–µ–π –¥–æ ‚àû —Ä—É–±–ª–µ–π.", reply_markup=inline_btn)
		else:
			user.current_page = 0
			user.buy_contract = 0
			bot.delete_message(user.delete_message, user.message_id + 1)
			user.delete_message = chat_id
			user.message_id = query.message.message_id
			inline_btn = types.InlineKeyboardMarkup()
			url_button = types.InlineKeyboardButton(text="‚¨Ö", callback_data="previous_contract")
			url_button2 = types.InlineKeyboardButton(text="‚ûï", callback_data="buy_contract")
			url_button3 = types.InlineKeyboardButton(text="‚û°", callback_data="next_contract")
			inline_btn.row(url_button,url_button2,url_button3)
			bot.send_message(chat_id, "üìù | –ö–æ–Ω—Ç—Ä–∞–∫—Ç ¬´–ù–∞—á–∞–ª—å–Ω—ã–π¬ª - –ø–ª—é—Å 30% –∫ –¥–µ–ø–æ–∑–∏—Ç—É.\nüïî | –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ - 7 –¥–Ω–µ–π.\nüí∞ | –°—É–º–º–∞ –≤–∑–Ω–æ—Å–∞ –æ—Ç 100 —Ä—É–±–ª–µ–π –¥–æ 14999 —Ä—É–±–ª–µ–π.", reply_markup=inline_btn)
@bot.callback_query_handler(lambda query: query.data == "previous_contract")
def process_callback_2(query):
	global all_data
	chat_id=query.message.chat.id
	if all_data.get(chat_id) != None:
		user = all_data[chat_id]
		user.clicked = 0
		if user.current_page == 0:
			user.current_page = 2
			user.buy_contract = 4
			bot.delete_message(user.delete_message, user.message_id + 1)
			user.delete_message = chat_id
			user.message_id = query.message.message_id
			inline_btn = types.InlineKeyboardMarkup()
			url_button = types.InlineKeyboardButton(text="‚¨Ö", callback_data="previous_contract")
			url_button2 = types.InlineKeyboardButton(text="‚ûï", callback_data="buy_contract")
			url_button3 = types.InlineKeyboardButton(text="‚û°", callback_data="next_contract")
			inline_btn.row(url_button,url_button2,url_button3)
			bot.send_message(chat_id, "üìù | –ö–æ–Ω—Ç—Ä–∞–∫—Ç ¬´–ë–∏–∑–Ω–µ—Å¬ª - –ø–ª—é—Å 40% –∫ –¥–µ–ø–æ–∑–∏—Ç—É.\nüïî | –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ - 7 –¥–Ω–µ–π.\nüí∞ | –°—É–º–º–∞ –≤–∑–Ω–æ—Å–∞ –æ—Ç 100000 —Ä—É–±–ª–µ–π –¥–æ ‚àû —Ä—É–±–ª–µ–π.", reply_markup=inline_btn)
		elif user.current_page == 2:
			user.current_page = 1
			user.buy_contract = 2
			bot.delete_message(user.delete_message, user.message_id + 1)
			user.delete_message = chat_id
			user.message_id = query.message.message_id
			inline_btn = types.InlineKeyboardMarkup()
			url_button = types.InlineKeyboardButton(text="‚¨Ö", callback_data="previous_contract")
			url_button2 = types.InlineKeyboardButton(text="‚ûï", callback_data="buy_contract")
			url_button3 = types.InlineKeyboardButton(text="‚û°", callback_data="next_contract")
			inline_btn.row(url_button,url_button2,url_button3)
			bot.send_message(chat_id, "üìù | –ö–æ–Ω—Ç—Ä–∞–∫—Ç ¬´–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π¬ª - –ø–ª—é—Å 35% –∫ –¥–µ–ø–æ–∑–∏—Ç—É.\nüïî | –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ - 7 –¥–Ω–µ–π.\nüí∞ | –°—É–º–º–∞ –≤–∑–Ω–æ—Å–∞ –æ—Ç 15000 —Ä—É–±–ª–µ–π –¥–æ 99999 —Ä—É–±–ª–µ–π.", reply_markup=inline_btn)
		else:
			user.current_page = 0
			bot.delete_message(user.delete_message, user.message_id + 1)
			user.delete_message = chat_id
			user.buy_contract = 0
			user.message_id = query.message.message_id
			inline_btn = types.InlineKeyboardMarkup()
			url_button = types.InlineKeyboardButton(text="‚¨Ö", callback_data="previous_contract")
			url_button2 = types.InlineKeyboardButton(text="‚ûï", callback_data="buy_contract")
			url_button3 = types.InlineKeyboardButton(text="‚û°", callback_data="next_contract")
			inline_btn.row(url_button,url_button2,url_button3)
			bot.send_message(chat_id, "üìù | –ö–æ–Ω—Ç—Ä–∞–∫—Ç ¬´–ù–∞—á–∞–ª—å–Ω—ã–π¬ª - –ø–ª—é—Å 30% –∫ –¥–µ–ø–æ–∑–∏—Ç—É.\nüïî | –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ - 7 –¥–Ω–µ–π.\nüí∞ | –°—É–º–º–∞ –≤–∑–Ω–æ—Å–∞ –æ—Ç 100 —Ä—É–±–ª–µ–π –¥–æ 14999 —Ä—É–±–ª–µ–π.", reply_markup=inline_btn)
@bot.callback_query_handler(lambda query: query.data == "buy_contract")
def process_callback_3(query):
	global all_data
	chat_id=query.message.chat.id
	if all_data.get(chat_id) != None:
		user = all_data[chat_id]
		user.clicked = 0
		if user.delete_message != 0:
			bot.delete_message(user.delete_message, user.message_id + 1)
			if user.buy_contract == 0:
				user.buy_contract = 1
				bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ —Ç—É —Å—É–º–º—É –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–ª—é—á–∏—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç —Å—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ –º–µ–Ω—ã—à–µ 100 —Ä—É–±–ª–µ–π –∏ –Ω–µ –±–æ–ª—å—à–µ 14999 —Ä—É–±–ª–µ–π.', reply_markup=previous(chat_id))
			elif user.buy_contract == 2:
				user.buy_contract = 3
				bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ —Ç—É —Å—É–º–º—É –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–ª—é—á–∏—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç —Å—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ –º–µ–Ω—ã—à–µ 15000 —Ä—É–±–ª–µ–π –∏ –Ω–µ –±–æ–ª—å—à–µ 99999 —Ä—É–±–ª–µ–π.', reply_markup=previous(chat_id))
			elif user.buy_contract == 4:
				user.buy_contract = 5
				bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ —Ç—É —Å—É–º–º—É –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–ª—é—á–∏—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç —Å—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ –º–µ–Ω—ã—à–µ 100000 —Ä—É–±–ª–µ–π –∏ –Ω–µ –±–æ–ª—å—à–µ ‚àû', reply_markup=previous(chat_id))
@bot.callback_query_handler(lambda query: query.data == "no_ibuy2")
def process_callback_4(query):
	global all_data
	chat_id=query.message.chat.id
	if all_data.get(chat_id) != None:
		user = all_data[chat_id]
		user.clicked = 0
		user_id = user.user_id
		if user.deposit_sum != 0:
			user.deposit_sum = 0
			database = ConnectDB('45.13.252.1','u301024735_botter','botinbot2019','u301024735_botter')
			conn = database.connect()
			request = RequestDB(conn, 'accounts','user_id',user_id,0,1)
			query = request.select()
			fetchl = query.fetchall()
			bot.send_message(chat_id, '–ù–∞–ø—Ä–∞–≤–ª—è–µ–º—Å—è‚Ä§‚Ä§', reply_markup=account(user_id))
# @bot.callback_query_handler(lambda query: query.data == "yes_ibuy2")
# def process_callback_5(query):
# 	global all_data
# 	chat_id=query.message.chat.id
# 	if all_data.get(chat_id) != None:
# 		user = all_data[chat_id]
# 		user.clicked = 0
# 		user_id = user.user_id
# 		if user.deposit_sum != 0:
# 			rand_str= random_string(4)
# 			database = ConnectDB('45.13.252.1','u301024735_botter','botinbot2019','u301024735_botter')
# 			conn = database.connect()
# 			arr_insert = str(user_id) + str(",") + str(user.deposit_sum) + str(",") + str("'") + str("Payeer") + str("'") + str(",") + str("'") + str(rand_str) + str("'") + str(",") + str(0)
# 			request = RequestDB(conn, 'deposit','user_id,cost,payment_system,comments,status',arr_insert)
# 			query = request.insert()
# 			conn.commit()
# 			request = RequestDB(conn, 'deposit','comments',str("'") + rand_str + str("'"),0,1)
# 			query = request.select()
# 			fetchl = query.fetchall()
# 			user.deposit_sum = 0
# 			user.sum_payment = rand_str
# 			user.position = 2
# 			bot.send_message(chat_id, "–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ ‚Ññ%d\n–û–ø–µ—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞: %s\n\n–°—É–º–º–∞ : %d—Ä\n–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã: P1017902517\n–° –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º: %s\n\n–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û!\n–ü—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–µ —Å—É–º–º—ã —É–∫–∞–∑—ã–≤–∞–π—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏.\n\n–í–Ω–∏–º–∞–Ω–∏–µ!\n–ù–∞—á–∏—Å–ª–µ–Ω–∏–µ –Ω–∞ —Å—á—ë—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 5 –º–∏–Ω—É—Ç." % (fetchl[0]['id'],fetchl[0]['date_it'],fetchl[0]['cost'],rand_str), reply_markup=oplatil(user_id))
# 			conn.close()
@bot.callback_query_handler(lambda query: query.data == "yes_ibuy")
def process_callback_6(query):
	global all_data
	chat_id=query.message.chat.id
	if all_data.get(chat_id) != None:
		user = all_data[chat_id]
		user.clicked = 0
		if user.contract_sum != 0:
			database = ConnectDB('45.13.252.1','u301024735_botter','botinbot2019','u301024735_botter')
			conn = database.connect()
			request = RequestDB(conn, 'accounts','user_id',chat_id,0,1)
			query = request.select()
			if query.rowcount != 0:
				fetchl = query.fetchall()
				if fetchl[0]['balance'] >= user.contract_sum:
					user_balance = fetchl[0]['balance']
					new_balance = user_balance - user.contract_sum
					ts = time.time() + 604800
					st = datetime.fromtimestamp(ts).strftime('%Y-%m-%d %H:%M:%S')
					if user.contract_sum >= 100 and user.contract_sum <= 14999:
						types = 1
					elif user.contract_sum >= 15000 and user.contract_sum <= 99999:
						types = 2
					elif user.contract_sum >= 100000:
						types = 3
					request3 = RequestDB(conn, 'accounts','balance',new_balance,'user_id',chat_id)
					request3.update()
					conn.commit()
					arr_insert = str(chat_id) + str(",") + str(user.contract_sum) + str(",") + str(0) + str(",") + str("'") + str(st) + str("'") + str(",") + str(1) + str(",") + str(types)
					request2 = RequestDB(conn, 'contracts','user_id,cost,working,date_end,status,type',arr_insert)
					request2.insert()
					conn.commit()
					bot.delete_message(user.delete_message, user.message_id + 1)
					user.contract_sum = 0
					user.buy_contract = 0
					bot.send_message(chat_id, '‚úÖ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–∫–ª—é—á–∏–ª–∏ –Ω–æ–≤—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç', reply_markup=account(chat_id))
				else:
					user.buy_contract = 0
					bot.send_message(chat_id, '‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –∑–∞–∫–ª—é—á–µ–Ω–∏–µ –¥–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞', reply_markup=previous(chat_id))
			conn.close()
# @bot.callback_query_handler(lambda query: query.data == "start_system")
# def process_callback_6(query):
# 	global all_data
# 	chat_id=query.message.chat.id
# 	if all_data['started'] == 0:
# 		all_data['started'] = 1
# 		bot.delete_message(user.delete_message, user.message_id + 1)
# 		user.delete_message = chat_id
# 		user.message_id = query.message.message_id
# 		bot.send_message(chat_id, '–ù–∞–ø—Ä–∞–≤–ª—è–µ–º—Å—è‚Ä§‚Ä§', reply_markup=keyboard())
while True:
    try:
        bot.polling()
    except Exception as e:
        print(e)
        time.sleep(15)